<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cocoapods on Samwei12&#39;s blog</title>
    <link>http://localhost:1313/tags/cocoapods/</link>
    <description>Recent content in Cocoapods on Samwei12&#39;s blog</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 04 Mar 2020 23:16:48 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/cocoapods/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cocoapods插件机制浅析</title>
      <link>http://localhost:1313/posts/ruby/cocoapods%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/</link>
      <pubDate>Wed, 04 Mar 2020 23:16:48 +0000</pubDate>
      <guid>http://localhost:1313/posts/ruby/cocoapods%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.samwei12.cn/2020/03/04/Ruby/Cocoapods%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6%E6%B5%85%E6%9E%90/&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;虽然做iOS开发的过程中使用过 &lt;strong&gt;&lt;a href=&#34;https://cocoapods.org/&#34;&gt;Cocoapods&lt;/a&gt;&lt;/strong&gt;， 但是对里面的细节了解其实不算太多，直到这两年做织女项目时，通过对Cocoapods进行Qt支持改造才开始深入了解部分细节，这个过程中，网上没有找到太多相关资料，本文就简单介绍下我对Cocoapods提供的插件机制的一个简单了解，希望能给大家带来一些帮助。&lt;/p&gt;
&lt;h3 id=&#34;ruby-open-classes&#34;&gt;Ruby Open Classes&lt;/h3&gt;
&lt;p&gt;在此之前，我们简单看下 &lt;code&gt;Ruby Open Classes&lt;/code&gt; ，这部分是为未接触过Ruby的同学准备的，熟悉的同学可以直接略过。&lt;/p&gt;
&lt;p&gt;在Ruby中，类永远是开放的，你总是可以将新的方法加入到已有的类中，除了你自己的代码中，还可以用在标准库和内置类中，这个特性被称为&lt;code&gt;Ruby Open Classes&lt;/code&gt;。下面我们通过一个示例简单看下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何创建一个 Cocoapods 插件</title>
      <link>http://localhost:1313/posts/ruby/gem/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAcocoapods-%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 22 Apr 2019 11:07:35 +0000</pubDate>
      <guid>http://localhost:1313/posts/ruby/gem/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAcocoapods-%E6%8F%92%E4%BB%B6/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.samwei12.cn/2019/04/22/Ruby/Gem/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AACocoapods%20%E6%8F%92%E4%BB%B6/&#34;&gt;原文链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我们在使用 Cocoapods 过程中,如果发现它未能满足我们的要求该怎么办呢?&lt;/li&gt;
&lt;li&gt;最简单的粗暴的办法就是 fork 一份 Cocoapods 源码,然后自己公司内部或者个人直接针对源码进行部分修改或者新增功能,但这样做完全没有兼容性和扩展性,如果后续 Cocoapods 升级版本,你是无法兼容的,还需要重新进行一次修改,费力不讨好.&lt;/li&gt;
&lt;li&gt;其实 Cocoapods 提供了一套很方便的插件机制,只需要符合插件规则,即可定制各种自定义需求,接下来我们就看下应该如何自定义一个自己的插件.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
